(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    215011,       4004]
NotebookOptionsPosition[    213586,       3958]
NotebookOutlinePosition[    213940,       3974]
CellTagsIndexPosition[    213897,       3971]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical solution for the n-pendulum", "Title",
 CellChangeTimes->{{3.6904188671804647`*^9, 3.690418872603294*^9}}],

Cell[CellGroupData[{

Cell["Author: Ryan Rubenzahl (12/10/2016)", "Section",
 CellChangeTimes->{{3.690418878723898*^9, 3.6904188840104923`*^9}, {
  3.6904204533942127`*^9, 3.690420463818323*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.687971763374626*^9, 3.687971767022356*^9}, {
   3.6879761710889063`*^9, 3.687976185804942*^9}, {3.6879762252356777`*^9, 
   3.687976225864943*^9}, {3.68797626748176*^9, 3.687976267519135*^9}, {
   3.687976309651821*^9, 3.687976309760809*^9}, {3.687976436100812*^9, 
   3.687976458198196*^9}, {3.687977696675469*^9, 3.687977696717574*^9}, {
   3.687978085719915*^9, 3.6879780857975082`*^9}, {3.687978139316258*^9, 
   3.687978139355426*^9}, {3.687978196776308*^9, 3.687978196845003*^9}, {
   3.687978262017949*^9, 3.687978262104925*^9}, {3.687981089059269*^9, 
   3.687981089119298*^9}, {3.6879812707782497`*^9, 3.68798127080905*^9}, {
   3.68798165020737*^9, 3.687981652470093*^9}, {3.687981833614756*^9, 
   3.6879818338944883`*^9}, {3.687981967607683*^9, 3.687981987519248*^9}, 
   3.687982047291945*^9, {3.6879840628916273`*^9, 3.6879840629289017`*^9}, {
   3.6879841860489073`*^9, 3.6879841865038633`*^9}, {3.6879842743197813`*^9, 
   3.6879842746011477`*^9}, {3.688063805978403*^9, 3.6880638061208687`*^9}, {
   3.688696114354186*^9, 3.688696114424374*^9}, {3.689096112829131*^9, 
   3.689096113010346*^9}, {3.689096163297172*^9, 3.6890961635193*^9}, {
   3.6893526505812283`*^9, 3.689352650931794*^9}, {3.689353037999793*^9, 
   3.6893530382946463`*^9}, {3.689353076214259*^9, 3.689353076284548*^9}, {
   3.690177731508582*^9, 3.69017773161587*^9}, {3.69022538114148*^9, 
   3.690225381492179*^9}, {3.690418949177038*^9, 3.690418949247178*^9}, {
   3.690419048060224*^9, 3.69041904831444*^9}, {3.6904196132257357`*^9, 
   3.690419613423863*^9}, {3.69041967653511*^9, 3.690419676853485*^9}, {
   3.690419855429462*^9, 3.690419855533866*^9}, 3.6904204202605953`*^9, {
   3.692289961096117*^9, 3.692289961340868*^9}, {3.692290055282672*^9, 
   3.692290055522296*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lengths", "[", "i", "]"}], "=", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"masses", "[", "i", "]"}], "=", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"angles", "[", "i", "]"}], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"q", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"angledots", "[", "i", "]"}], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "i", "]"}], "'"}], "[", "t", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.687968498896866*^9, 3.687968547094741*^9}, {
   3.687968634393997*^9, 3.687968655760618*^9}, {3.687968771667885*^9, 
   3.687968806130129*^9}, {3.687968874178864*^9, 3.687968882648692*^9}, {
   3.68796921427203*^9, 3.6879692170149307`*^9}, {3.6879692607810087`*^9, 
   3.6879692988580503`*^9}, {3.687971532078088*^9, 3.687971541374277*^9}, {
   3.687971647120015*^9, 3.6879717249422092`*^9}, {3.687971922278921*^9, 
   3.687971932317883*^9}, {3.68797198453796*^9, 3.687971992257051*^9}, {
   3.687972096378544*^9, 3.6879720981751337`*^9}, 3.687973559759315*^9, {
   3.687975428110186*^9, 3.68797552956953*^9}, {3.6879755629215717`*^9, 
   3.6879757237394733`*^9}, {3.687975777545739*^9, 3.6879758539380493`*^9}, {
   3.687975891524528*^9, 3.687975946663147*^9}, 3.687976168653042*^9, {
   3.687976249801106*^9, 3.6879762764794827`*^9}, 3.687976344253819*^9, {
   3.687978091135565*^9, 3.68797809155171*^9}, {3.687981569522002*^9, 
   3.687981576369232*^9}, {3.687981617736053*^9, 3.6879816642036533`*^9}, {
   3.687981771888743*^9, 3.6879818622336082`*^9}, {3.687981980871142*^9, 
   3.687981985124857*^9}, {3.687982050210829*^9, 3.687982056122862*^9}, {
   3.6904185573257227`*^9, 3.690418636023541*^9}, {3.6904190040307693`*^9, 
   3.690419005780908*^9}}],

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"initialangles", "[", "i", "]"}], ":=", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BC", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"angles", "[", "i", "]"}], "[", "0", "]"}], "==", 
        RowBox[{"initialangles", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"angledots", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.687976948382359*^9, 3.6879769696144953`*^9}, {
   3.687977010563542*^9, 3.687977079470502*^9}, {3.687977134457768*^9, 
   3.687977136519504*^9}, {3.687977538849869*^9, 3.6879776624925737`*^9}, 
   3.6879780978542023`*^9, 3.687978193783239*^9}],

Cell[BoxData[{
 RowBox[{
  StyleBox["T",
   FontSize->12], 
  StyleBox[":=",
   FontSize->12], 
  RowBox[{
   StyleBox[
    FractionBox["1", "2"],
    FontSize->12], 
   RowBox[{
    StyleBox["Sum",
     FontSize->12], 
    StyleBox["[",
     FontSize->12], 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"masses", "[", "i", "]"}],
       FontSize->12], 
      StyleBox["*",
       FontSize->12], 
      RowBox[{
       StyleBox["(",
        FontSize->12], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"lengths", "[", "j", "]"}], "*", 
             RowBox[{
              RowBox[{"angledots", "[", "j", "]"}], "[", "t", "]"}], "*", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"angles", "[", "j", "]"}], "[", "t", "]"}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ")"}], "2"], 
        StyleBox["+",
         FontSize->12], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"lengths", "[", "j", "]"}], "*", 
             RowBox[{
              RowBox[{"angledots", "[", "j", "]"}], "[", "t", "]"}], "*", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"angles", "[", "j", "]"}], "[", "t", "]"}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ")"}], "2"]}], 
       StyleBox[")",
        FontSize->12]}]}], 
     StyleBox[",",
      FontSize->12], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}],
      FontSize->12]}], 
    StyleBox["]",
     FontSize->12]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["U",
   FontSize->12], 
  StyleBox[":=",
   FontSize->12], 
  RowBox[{
   StyleBox[
    RowBox[{"-", "g"}],
    FontSize->12], 
   StyleBox["*",
    FontSize->12], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"masses", "[", "i", "]"}], "*", 
        RowBox[{"lengths", "[", "j", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"angles", "[", "j", "]"}], "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"lagrangian", ":=", 
  RowBox[{"T", "-", "U"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.687968352038535*^9, {3.68796860369965*^9, 3.687968610692423*^9}, {
   3.687968659504447*^9, 3.6879688129292183`*^9}, {3.687968884880965*^9, 
   3.687968955802799*^9}, {3.687968989442569*^9, 3.687969088219675*^9}, {
   3.687971554407941*^9, 3.687971563716631*^9}, {3.6879716823632803`*^9, 
   3.687971683145349*^9}, {3.687971732696004*^9, 3.687971746782461*^9}, {
   3.687971829932626*^9, 3.687971830642128*^9}, {3.687972226162356*^9, 
   3.687972247397936*^9}, 3.687973617489718*^9, 3.687973651074971*^9, {
   3.688448134612007*^9, 3.688448137990543*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ELequations", "=", 
  RowBox[{"EulerEquations", "[", 
   RowBox[{"lagrangian", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"angles", "[", "i", "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "t"}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.687968359037314*^9, 3.687968360091511*^9}, {
   3.687969100930785*^9, 3.687969106475975*^9}, {3.687969142249572*^9, 
   3.687969142785521*^9}, {3.687969249428011*^9, 3.687969251467534*^9}, {
   3.687971853329337*^9, 3.6879718703127823`*^9}, {3.6879722956609898`*^9, 
   3.6879723134221354`*^9}, {3.6879735811211987`*^9, 3.687973583198105*^9}, 
   3.687973651075119*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "29.43`"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "2", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "3", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"3.`", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "1", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "2", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "3", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "19.62`"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "1", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "3", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "1", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "2", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "3", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "9.81`"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"1.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "1", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"1.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "2", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "1", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "2", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"1.`", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "3", "]"}], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.6879684038194237`*^9, {3.687969057559181*^9, 3.687969108178123*^9}, {
   3.687969227997583*^9, 3.6879692518623247`*^9}, 3.687969301231381*^9, 
   3.6879705441787767`*^9, 3.687970646570587*^9, 3.687970825318828*^9, 
   3.687971358133807*^9, {3.687971551114916*^9, 3.6879715666235857`*^9}, {
   3.687971729653489*^9, 3.6879717726715813`*^9}, {3.687971822479314*^9, 
   3.687971833002264*^9}, 3.687971870921071*^9, {3.687971938927794*^9, 
   3.6879719571919603`*^9}, 3.687972005392014*^9, 3.687972112021977*^9, {
   3.687972314173275*^9, 3.6879723265767307`*^9}, 3.687972377001988*^9, 
   3.687972503213623*^9, {3.687973651075383*^9, 3.687973655738781*^9}, 
   3.687975746247169*^9, 3.687975801440295*^9, {3.687976148068386*^9, 
   3.687976188921282*^9}, {3.687976257456176*^9, 3.6879763124293327`*^9}, 
   3.6879763564969873`*^9, {3.6879764228021708`*^9, 3.6879764701770906`*^9}, {
   3.6879776803561573`*^9, 3.6879777031251373`*^9}, 3.687978103279907*^9, 
   3.687978145151005*^9, 3.687978198921392*^9, 3.687978264802886*^9, 
   3.687981102041614*^9, 3.687981394606943*^9, {3.687981658668469*^9, 
   3.6879816696629543`*^9}, {3.6879818413323383`*^9, 3.687981868317452*^9}, 
   3.687981994909066*^9, 3.687982075675078*^9, 3.687984066833425*^9, 
   3.687984189697506*^9, 3.687984279021208*^9, 3.6880638088838053`*^9, {
   3.6884481515832777`*^9, 3.688448166404763*^9}, 3.688696119939497*^9, 
   3.689096048386107*^9, 3.6890961166488447`*^9, 3.689096165663837*^9, 
   3.689352422161508*^9, 3.6893526546880417`*^9, 3.689353041342977*^9, 
   3.689353078859295*^9, 3.690177738605122*^9, 3.690181251129006*^9, 
   3.6902253860751123`*^9, 3.6904186421468*^9, 3.6904186758822613`*^9, {
   3.6904189259839067`*^9, 3.690418954435377*^9}, 3.6904190103342867`*^9, 
   3.690419053002082*^9, 3.690419133861519*^9, 3.6904196215630617`*^9, 
   3.690419690358199*^9, 3.690420053926317*^9, 3.690420425324976*^9, 
   3.6904814118248*^9, 3.692289916269734*^9, 3.6922899751477737`*^9, 
   3.692290057880046*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ELequations", ",", "BC"}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"angles", "[", "i", "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"Method", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
      "}"}]}]}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.687969054736157*^9, 3.687969113670884*^9, {3.6879693067076*^9, 
   3.687969323314527*^9}, {3.687971774949942*^9, 3.6879717753239403`*^9}, 
   3.687972490415206*^9, 3.6879735979108257`*^9, 3.687973651075492*^9, {
   3.687975552907371*^9, 3.6879755553852797`*^9}, {3.687975737257511*^9, 
   3.687975765044388*^9}, {3.687975803623369*^9, 3.687975812817765*^9}, {
   3.687976116738307*^9, 3.687976118426825*^9}, {3.6879764733319187`*^9, 
   3.687976474533225*^9}, {3.687976856121983*^9, 3.687976914023267*^9}, {
   3.687977688786332*^9, 3.687977709730351*^9}, {3.6879814570083313`*^9, 
   3.687981457880168*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"q", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD5BDENU+yH5P/BdXF00
Ffo/kvYzqP9I+7/OO7mkBi4LQFvsi2eZvvs/ZDHLW8wwFEC1Il4Wf/v1v0XB
TstvqRpAscJYrExM9D8alh9oPtcgQCZoQwuiTtO/GlLMUc4dJEC2FiArOICo
v6F7LwaTqidAkkh0xqQ74T9aI53txCYrQImN3UQeW+E/nFE/PABnLkBkZAB7
fdC4P7P2yyq49jBA0adZTysp4L/chxLr9JsyQCx4MCVE2eQ/H1jeROg4NECz
K7o6WSTgPyVfBQT2+DVAKxX+o8oX/79vqcZ2CJs3QJPRra74q+y/fSrjTjVg
OUC0XPNwMo7Pv6TqhMAYHTtA/zg1szQn3j8P7sDlALw8QFBSuBadC9q/PihY
cAN+PkCOj16zgkv9P9jSRFcFEUBAIanwLeIA6j/zLAsplvRAQI3mm7TRmfK/
miaURwLUQUCcWSJbmwX9v+RB6r9wpEJADG/jaRb/9j+P+O1qbIZDQDS6Ghzk
Vcw/3NC+b2pZRECIGcMCBPT+v7ZIUsFDKEVA26ScH0il6D/yW5NFqghGQOms
2c7aI/A/0JChIxPaRkAptApTBpX/PxBhXTQJvUdAP4fMwVi5vb/c0NuR2ptI
QFmudNX9q8w/SmInSa5rSUCxODhjdj3+PxqPIDMPTUpAxRLzHBs98b+M3eZ2
ch9LQFocxgoopdS/i8tvB7HtS0CLKAkHj4TfP+xUpsp8zUxA0TRAsOeQuj/v
/6nnSp5NQAH4PhG5YdM/VEZbN6aATkBKOFuW1ArXP1uu2eADVE9A/QHxAlDG
0b/4Wo1rnhFQQPGrN6PHoMA/c6wEgAGCUEAWL1JxNXHrP7+OYsHl6lBAW3tV
KRi3t7+7PheckFxRQArNbHPbeO0/fj4tHSnMUUBek3WK6ZnUPxLPKctCNFJA
eBP7K1kk/j9XLX0SI6VSQOJu0ZmQdeI/bRy3hoQOU0AgwtL7+tH4v0lbUqHT
dVNAyga+OSIy3T/WZ0RV6eVTQOkEqR5p3AFANAUdNoBOVECIGSempJfyv0Nw
TLDdv1RA8EYPpqFC5D8YK93QKC9VQNsxhbozS/+/vnZUHvWWVUAxXw42spzs
vxWQIgWIB1ZANUJo4qx4xb89OtcYnHBWQC1njonqT+k/FrLixXbiVkBogDsx
s8nzv7V5Txk/UldAbOG9KFXZ5z8m0qKZiLpXQOnWT9UVMN0/R/hMs5grWECU
diot+3Tzvzmv3fkplVhAhpbe+UE+278+GeT4//9YQLR3jXAk1di/TKHGcw==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-1.955859879107371, 
                    2.232622375042969}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD5BDENU+yH5P/BdXF00
Ffo/kvYzqP9I+7/OO7mkBi4LQFvsi2eZvvs/ZDHLW8wwFEC1Il4Wf/v1v0XB
TstvqRpAscJYrExM9D8alh9oPtcgQCZoQwuiTtO/GlLMUc4dJEC2FiArOICo
v6F7LwaTqidAkkh0xqQ74T9aI53txCYrQImN3UQeW+E/nFE/PABnLkBkZAB7
fdC4P7P2yyq49jBA0adZTysp4L/chxLr9JsyQCx4MCVE2eQ/H1jeROg4NECz
K7o6WSTgPyVfBQT2+DVAKxX+o8oX/79vqcZ2CJs3QJPRra74q+y/fSrjTjVg
OUC0XPNwMo7Pv6TqhMAYHTtA/zg1szQn3j8P7sDlALw8QFBSuBadC9q/PihY
cAN+PkCOj16zgkv9P9jSRFcFEUBAIanwLeIA6j/zLAsplvRAQI3mm7TRmfK/
miaURwLUQUCcWSJbmwX9v+RB6r9wpEJADG/jaRb/9j+P+O1qbIZDQDS6Ghzk
Vcw/3NC+b2pZRECIGcMCBPT+v7ZIUsFDKEVA26ScH0il6D/yW5NFqghGQOms
2c7aI/A/0JChIxPaRkAptApTBpX/PxBhXTQJvUdAP4fMwVi5vb/c0NuR2ptI
QFmudNX9q8w/SmInSa5rSUCxODhjdj3+PxqPIDMPTUpAxRLzHBs98b+M3eZ2
ch9LQFocxgoopdS/i8tvB7HtS0CLKAkHj4TfP+xUpsp8zUxA0TRAsOeQuj/v
/6nnSp5NQAH4PhG5YdM/VEZbN6aATkBKOFuW1ArXP1uu2eADVE9A/QHxAlDG
0b/4Wo1rnhFQQPGrN6PHoMA/c6wEgAGCUEAWL1JxNXHrP7+OYsHl6lBAW3tV
KRi3t7+7PheckFxRQArNbHPbeO0/fj4tHSnMUUBek3WK6ZnUPxLPKctCNFJA
eBP7K1kk/j9XLX0SI6VSQOJu0ZmQdeI/bRy3hoQOU0AgwtL7+tH4v0lbUqHT
dVNAyga+OSIy3T/WZ0RV6eVTQOkEqR5p3AFANAUdNoBOVECIGSempJfyv0Nw
TLDdv1RA8EYPpqFC5D8YK93QKC9VQNsxhbozS/+/vnZUHvWWVUAxXw42spzs
vxWQIgWIB1ZANUJo4qx4xb89OtcYnHBWQC1njonqT+k/FrLixXbiVkBogDsx
s8nzv7V5Txk/UldAbOG9KFXZ5z8m0qKZiLpXQOnWT9UVMN0/R/hMs5grWECU
diot+3Tzvzmv3fkplVhAhpbe+UE+278+GeT4//9YQLR3jXAk1di/TKHGcw==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-1.955859879107371, 
                    2.232622375042969}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzHswGwYAx/FMpWlrrYmmiRzF4hHPeoR4pMkP8YwiD482NWUtvapLjtZu
N5zbYXatYjUdMZvH7GJmm2fbmbCO7UQtY0oNLfNebbSJBjvW/fG9z39f6xSZ
6JIBgUDgvOp/awq7SApZD5fmwpfsWm/zNhLPJ7IoOzyD4dN2MuuXqhH/e40H
XY1gOS/1sprU8i66q6XDbsfhsuwtOr6wqQruj1LLlHS0lWf5pPy7yqNXWl7m
TljhQ3t+/bUKwz66aFg4YmGDMYeXziAaoO69UwdvN9vDZrXhqvBtCs4xPl3/
yc4JVbPUOtdMCmqEPA4hzRUPzE04Dwg6VfuW2vHulhu0v7BvccMImP6A/JdW
4QGBPaWIFbbHs0yY5a/4sOBjZMy03tSrbJOIhlt6Lxxtm7tWubfFkykHsw8p
2JCNcX/L0i3xch3/jPK64AvTO8GKFeWKqnGtoI9m4Y+8Wbvc+neOwPjvvkVC
DwdWHRd8DMMcwWUmyA/kcbHtYLuUwWdicpQfTzQBxO2KjzrdbfHC2cihUgv0
nN2bUNiYo9quItTg9wA06U6KoxqpWAhYU8kbA8He+KqbLKWhVL9+5WpREApG
Mgd2qs0wremVXTnLB629ZPpHJQVdYaL+IGYwbG62OLftUvFceju4+VAI0pob
sr0FZtCU1TFMp0IQSosO1FbR8EZyIuvwD6GgCYgtpuGUV78/yqcUYbA0dB3a
y2EgIsU+vDU9HOPDS30WO6agl1p5Gp+JQPKivE2/Yo6bM0vZmZYC6O60KsRx
VNxQy0jfrQtwf9ywgqSi4pmkaSjnYSR2qtTVeVF0/LOvXI6oPYMkwT04Dp6A
JETKbsqPgjapUF71NR3S1sdPD0ii0aQpmpufokN/riS91iQGHZap/m+lWCCr
xTD/tfdjkJf2cIihpEJ1K6V/cS0G8defOHZcZuB7LrWm7LwQKcfavQzC3ZHH
dbFwGBbCPuiF/4DQDeRfHdSBLBH6SrsycgrcEe+SS2Z8IcIGfe31zRYPZJh3
FxUcE2M8vaFjcs4D4VJR3dh1MXrVo7XVn3njURo/dnVRDHLQc5bn5z5gES28
86MkyEgVdDO1bATJI7+dUUnwOMb9y2fpHNCcZjTMU7G4qCkuEQb5ojdbclJX
GQvV3vQl2RM/UMreJBaT4nC001hNMvLDab8JWo08DoOej34+XO6HE23zA9nz
cdhdj9MxnrLR+W60GU8Uj0LCbnIAiQO70fqq4vvxiE81z8kY8UWoPrL9E6cE
3K2+QWITAd9vZrYdPk7AMfNlyhEND1yzBf3+fgJ4YybkTSnwH996oKk=
                    
                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-2.572488086419018, 
                    32.71829439039583}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzHswGwYAx/FMpWlrrYmmiRzF4hHPeoR4pMkP8YwiD482NWUtvapLjtZu
N5zbYXatYjUdMZvH7GJmm2fbmbCO7UQtY0oNLfNebbSJBjvW/fG9z39f6xSZ
6JIBgUDgvOp/awq7SApZD5fmwpfsWm/zNhLPJ7IoOzyD4dN2MuuXqhH/e40H
XY1gOS/1sprU8i66q6XDbsfhsuwtOr6wqQruj1LLlHS0lWf5pPy7yqNXWl7m
TljhQ3t+/bUKwz66aFg4YmGDMYeXziAaoO69UwdvN9vDZrXhqvBtCs4xPl3/
yc4JVbPUOtdMCmqEPA4hzRUPzE04Dwg6VfuW2vHulhu0v7BvccMImP6A/JdW
4QGBPaWIFbbHs0yY5a/4sOBjZMy03tSrbJOIhlt6Lxxtm7tWubfFkykHsw8p
2JCNcX/L0i3xch3/jPK64AvTO8GKFeWKqnGtoI9m4Y+8Wbvc+neOwPjvvkVC
DwdWHRd8DMMcwWUmyA/kcbHtYLuUwWdicpQfTzQBxO2KjzrdbfHC2cihUgv0
nN2bUNiYo9quItTg9wA06U6KoxqpWAhYU8kbA8He+KqbLKWhVL9+5WpREApG
Mgd2qs0wremVXTnLB629ZPpHJQVdYaL+IGYwbG62OLftUvFceju4+VAI0pob
sr0FZtCU1TFMp0IQSosO1FbR8EZyIuvwD6GgCYgtpuGUV78/yqcUYbA0dB3a
y2EgIsU+vDU9HOPDS30WO6agl1p5Gp+JQPKivE2/Yo6bM0vZmZYC6O60KsRx
VNxQy0jfrQtwf9ywgqSi4pmkaSjnYSR2qtTVeVF0/LOvXI6oPYMkwT04Dp6A
JETKbsqPgjapUF71NR3S1sdPD0ii0aQpmpufokN/riS91iQGHZap/m+lWCCr
xTD/tfdjkJf2cIihpEJ1K6V/cS0G8defOHZcZuB7LrWm7LwQKcfavQzC3ZHH
dbFwGBbCPuiF/4DQDeRfHdSBLBH6SrsycgrcEe+SS2Z8IcIGfe31zRYPZJh3
FxUcE2M8vaFjcs4D4VJR3dh1MXrVo7XVn3njURo/dnVRDHLQc5bn5z5gES28
86MkyEgVdDO1bATJI7+dUUnwOMb9y2fpHNCcZjTMU7G4qCkuEQb5ojdbclJX
GQvV3vQl2RM/UMreJBaT4nC001hNMvLDab8JWo08DoOej34+XO6HE23zA9nz
cdhdj9MxnrLR+W60GU8Uj0LCbnIAiQO70fqq4vvxiE81z8kY8UWoPrL9E6cE
3K2+QWITAd9vZrYdPk7AMfNlyhEND1yzBf3+fgJ4YybkTSnwH996oKk=
                    
                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-2.572488086419018, 
                    32.71829439039583}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4YLURU+yH5P/BdXF00
Ffo/u8IkrKTR8b/OO7mkBi4LQMMkT3LrRvQ/ZDHLW8wwFEB1cFHkKrIAwEXB
TstvqRpAy9MyaoOA+z8alh9oPtcgQA5vbQkxJgDAGlLMUc4dJEB8hjtKg2Pw
P6F7LwaTqidAnDPWK+h2HUBaI53txCYrQMPx0CMAswHAnFE/PABnLkB/SaE2
CP8hwLP2yyq49jBA1qGBxAZQK8DchxLr9JsyQDBUOXCiHyjAH1jeROg4NED+
F/hCLnMvwCVfBQT2+DVAPKBvAv1fM8BvqcZ2CJs3QCxRgKWKeiXAfSrjTjVg
OUDzB7D3IvQKwKTqhMAYHTtAl8ulJ5nD4D8P7sDlALw8QFoUInS4EOa/PihY
cAN+PkAw3Wt2BZESQNjSRFcFEUBA2DmQQ+tfEsDzLAsplvRAQHjuxFJN1AjA
miaURwLUQUBuD7EJlyTxP+RB6r9wpEJAe/Tq9jv2G8CP+O1qbIZDQCAFyRgm
Eg/A3NC+b2pZREClxEiYussnwLZIUsFDKEVAxq2e0RfcE8DyW5NFqghGQO47
/ZZgxizA0JChIxPaRkDEYq09MU0zwBBhXTQJvUdAWKwg0OZTMMDc0NuR2ptI
QLs3OY4B3CbASmInSa5rSUAJ2rGNH5MzwBqPIDMPTUpAeAaTRTe/J8CM3eZ2
ch9LQDE0G6FfgSrAi8tvB7HtS0DFEmNN3TEpwOxUpsp8zUxA/ICpCyRcKsDv
/6nnSp5NQKgiDYQeqirAVEZbN6aATkCIw+S6wI8owFuu2eADVE9A4VDIowXl
LMD4Wo1rnhFQQLPP186XzSfAc6wEgAGCUEBo4zg8vMwqwL+OYsHl6lBAwiR0
YXyVJMC7PheckFxRQCf/hKiaJSTAfj4tHSnMUUCkeQIWagwKwBLPKctCNFJA
01dQDFmMFsBXLX0SI6VSQFhC2dLiECvAbRy3hoQOU0B8IMUycG0zwElbUqHT
dVNAVmnQx4Q3KcDWZ0RV6eVTQLeWe6bhgRXANAUdNoBOVEBORRYFcY4dwENw
TLDdv1RAAYiDJzdJJsAYK93QKC9VQLzEISrTmzLAvnZUHvWWVUAJV1TBVA0o
wBWQIgWIB1ZACAJRSKCENMA9OtcYnHBWQOiNtx2WzDbAFrLixXbiVkA2CcJn
CA47wLV5Txk/UldA1tVz24zRM8Am0qKZiLpXQNH4sJD+vTTAR/hMs5grWEBP
fNZsC3YnwDmv3fkplVhAZjaQDCeFM8A+GeT4//9YQD2w6EH7ZDLAOfixAg==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-27.054815754768434`, 
                    7.36612003798373}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4YLURU+yH5P/BdXF00
Ffo/u8IkrKTR8b/OO7mkBi4LQMMkT3LrRvQ/ZDHLW8wwFEB1cFHkKrIAwEXB
TstvqRpAy9MyaoOA+z8alh9oPtcgQA5vbQkxJgDAGlLMUc4dJEB8hjtKg2Pw
P6F7LwaTqidAnDPWK+h2HUBaI53txCYrQMPx0CMAswHAnFE/PABnLkB/SaE2
CP8hwLP2yyq49jBA1qGBxAZQK8DchxLr9JsyQDBUOXCiHyjAH1jeROg4NED+
F/hCLnMvwCVfBQT2+DVAPKBvAv1fM8BvqcZ2CJs3QCxRgKWKeiXAfSrjTjVg
OUDzB7D3IvQKwKTqhMAYHTtAl8ulJ5nD4D8P7sDlALw8QFoUInS4EOa/PihY
cAN+PkAw3Wt2BZESQNjSRFcFEUBA2DmQQ+tfEsDzLAsplvRAQHjuxFJN1AjA
miaURwLUQUBuD7EJlyTxP+RB6r9wpEJAe/Tq9jv2G8CP+O1qbIZDQCAFyRgm
Eg/A3NC+b2pZREClxEiYussnwLZIUsFDKEVAxq2e0RfcE8DyW5NFqghGQO47
/ZZgxizA0JChIxPaRkDEYq09MU0zwBBhXTQJvUdAWKwg0OZTMMDc0NuR2ptI
QLs3OY4B3CbASmInSa5rSUAJ2rGNH5MzwBqPIDMPTUpAeAaTRTe/J8CM3eZ2
ch9LQDE0G6FfgSrAi8tvB7HtS0DFEmNN3TEpwOxUpsp8zUxA/ICpCyRcKsDv
/6nnSp5NQKgiDYQeqirAVEZbN6aATkCIw+S6wI8owFuu2eADVE9A4VDIowXl
LMD4Wo1rnhFQQLPP186XzSfAc6wEgAGCUEBo4zg8vMwqwL+OYsHl6lBAwiR0
YXyVJMC7PheckFxRQCf/hKiaJSTAfj4tHSnMUUCkeQIWagwKwBLPKctCNFJA
01dQDFmMFsBXLX0SI6VSQFhC2dLiECvAbRy3hoQOU0B8IMUycG0zwElbUqHT
dVNAVmnQx4Q3KcDWZ0RV6eVTQLeWe6bhgRXANAUdNoBOVEBORRYFcY4dwENw
TLDdv1RAAYiDJzdJJsAYK93QKC9VQLzEISrTmzLAvnZUHvWWVUAJV1TBVA0o
wBWQIgWIB1ZACAJRSKCENMA9OtcYnHBWQOiNtx2WzDbAFrLixXbiVkA2CcJn
CA47wLV5Txk/UldA1tVz24zRM8Am0qKZiLpXQNH4sJD+vTTAR/hMs5grWEBP
fNZsC3YnwDmv3fkplVhAZjaQDCeFM8A+GeT4//9YQD2w6EH7ZDLAOfixAg==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-27.054815754768434`, 
                    7.36612003798373}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.690420426704152*^9, 3.6904814132588387`*^9, 
  3.6922899179601173`*^9, 3.6922900109536257`*^9, 3.6922900584553623`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"thetas", "[", "i", "]"}], "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"angles", "[", "i", "]"}], "[", "t", "]"}], "/.", "sol"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xpos", "[", "j", "]"}], "[", "t_", "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"lengths", "[", "i", "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"thetas", "[", "i", "]"}], "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ypos", "[", "j", "]"}], "[", "t_", "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"lengths", "[", "i", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"thetas", "[", "i", "]"}], "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"lines", "[", "i", "]"}], "[", "t_", "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"xpos", "[", "i", "]"}], "[", "t", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"ypos", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"xpos", "[", 
            RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"ypos", "[", 
             RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}]}]}], "}"}]}], 
       "}"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"bobs", "[", "i", "]"}], "[", "t_", "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"xpos", "[", "i", "]"}], "[", "t", "]"}], ",", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"ypos", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}], ",", 
       "0.1"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.687969450734549*^9, 3.687969466774905*^9}, {
   3.6879695028888617`*^9, 3.687969527609832*^9}, {3.6879695694364557`*^9, 
   3.6879695965422373`*^9}, {3.687969630371109*^9, 3.687969720026305*^9}, {
   3.687969871415447*^9, 3.687969888167275*^9}, {3.687970653612637*^9, 
   3.6879706624333477`*^9}, {3.687970841182651*^9, 3.687970841731675*^9}, {
   3.6879710335691223`*^9, 3.6879710347813*^9}, {3.6879714226250563`*^9, 
   3.687971425023929*^9}, {3.687971490495337*^9, 3.68797152121427*^9}, {
   3.687972350083434*^9, 3.687972365833943*^9}, {3.687972396504868*^9, 
   3.687972414851532*^9}, {3.687972705267934*^9, 3.687972736358142*^9}, {
   3.6879729960855503`*^9, 3.687973005580104*^9}, {3.687973043432487*^9, 
   3.687973049663677*^9}, {3.687973682669733*^9, 3.6879736859553537`*^9}, 
   3.68797375908604*^9, {3.6879739833355227`*^9, 3.6879739852471743`*^9}, 
   3.687976146312059*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TotalLength", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"lengths", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TotalLength", "=", 
   RowBox[{"TotalLength", "+", 
    RowBox[{"TotalLength", "/", "10"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "TotalLength"}], ",", "TotalLength"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "TotalLength"}], ",", "TotalLength"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"xpos", "[", "1", "]"}], "[", "t", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{
               RowBox[{"ypos", "[", "1", "]"}], "[", "t", "]"}]}]}], "}"}]}], 
          "}"}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lines", "[", "i", "]"}], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"bobs", "[", "i", "]"}], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100", ",", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
     RowBox[{"AnimationRunning", "->", "False"}]}], "}"}]}], "]"}]}], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6879700924228477`*^9, 3.6879701106257133`*^9}, {
   3.6879710670943527`*^9, 3.68797106992586*^9}, {3.687971113886546*^9, 
   3.6879711187934427`*^9}, {3.687972868733856*^9, 3.6879728709823227`*^9}, {
   3.687972909527628*^9, 3.6879729149641733`*^9}, {3.687973409459803*^9, 
   3.687973455602232*^9}, {3.6879734984528837`*^9, 3.687973515388975*^9}, {
   3.687974187396184*^9, 3.687974196196272*^9}, {3.687974373025074*^9, 
   3.687974406877412*^9}, {3.687974460924903*^9, 3.687974602393008*^9}, {
   3.687974796229512*^9, 3.687974801386989*^9}, {3.6879748876595078`*^9, 
   3.6879751902071543`*^9}, {3.687975243500443*^9, 3.6879752507815647`*^9}, {
   3.68797537289668*^9, 3.6879754019898787`*^9}, 3.687976146312381*^9, {
   3.6879822726463737`*^9, 3.687982314324812*^9}, {3.687982360458467*^9, 
   3.687982363313644*^9}, {3.687982476553268*^9, 3.687982514400443*^9}, {
   3.687982596763616*^9, 3.6879826308708563`*^9}, {3.68798271942531*^9, 
   3.687982721048174*^9}, {3.687982842284808*^9, 3.687982843362649*^9}, {
   3.687982913797741*^9, 3.687982973697253*^9}, {3.68798307439904*^9, 
   3.687983090983766*^9}, {3.6879831260692663`*^9, 3.68798314111001*^9}, {
   3.6884481984148483`*^9, 3.688448204987815*^9}, {3.690181236563045*^9, 
   3.690181239642642*^9}}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {360., {178., 182.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$19435$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$19435$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{0}, {$CellContext`x, -$CellContext`TotalLength, \
$CellContext`TotalLength}, 
        PlotRange -> {-$CellContext`TotalLength, $CellContext`TotalLength}, 
        Ticks -> None, Epilog -> {
          Line[{{0, 0}, {
             $CellContext`xpos[
             1][$CellContext`t$$], -$CellContext`ypos[1][$CellContext`t$$]}}], 
          Table[
           $CellContext`lines[$CellContext`i][$CellContext`t$$], \
{$CellContext`i, 1, $CellContext`n - 1}], 
          Table[
           $CellContext`bobs[$CellContext`i][$CellContext`t$$], \
{$CellContext`i, 1, $CellContext`n}]}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`t$$, 0, 100, AnimationRate -> 1, 
         Appearance -> "Open", AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.687975019632525*^9, 3.68797503178656*^9}, 
   3.687975071948689*^9, 3.6879751913928747`*^9, {3.687975251047162*^9, 
   3.6879752524510603`*^9}, {3.687975373592539*^9, 3.687975416333681*^9}, {
   3.6879761482732153`*^9, 3.687976194809367*^9}, {3.687976263033922*^9, 
   3.687976283898329*^9}, 3.687976326872231*^9, 3.6879763620257463`*^9, 
   3.6879777236560583`*^9, 3.687978110771553*^9, 3.687978149093924*^9, 
   3.687978199301063*^9, 3.687978270550227*^9, 3.687981112712125*^9, 
   3.687981470846306*^9, 3.6879816781771307`*^9, 3.687981884094544*^9, 
   3.68798201015954*^9, 3.687982091689163*^9, {3.687982291172822*^9, 
   3.687982314747491*^9}, 3.687982364179378*^9, {3.6879824900129423`*^9, 
   3.6879825151786327`*^9}, 3.6879825977266417`*^9, 3.6879826392572308`*^9, 
   3.687982726119482*^9, 3.687982871124817*^9, 3.687982943524454*^9, 
   3.6879830917221127`*^9, 3.687984071709996*^9, 3.687984213161969*^9, 
   3.687984286177844*^9, 3.6880638127069674`*^9, {3.688448188566674*^9, 
   3.688448205646222*^9}, 3.688696125061586*^9, 3.689096053413107*^9, 
   3.689096125713332*^9, 3.689096171112404*^9, 3.68935266131857*^9, 
   3.689353045634933*^9, 3.689353087972166*^9, {3.690181240089992*^9, 
   3.6901812547808867`*^9}, 3.6902253950287447`*^9, {3.690418659864976*^9, 
   3.690418681962183*^9}, {3.690418932798745*^9, 3.690418959980514*^9}, 
   3.6904190180514708`*^9, 3.690419069136531*^9, 3.690419144150826*^9, 
   3.690419643688158*^9, 3.690419763533847*^9, 3.690420426840303*^9, 
   3.690481413531837*^9, 3.692289918843207*^9, 3.6922900120508337`*^9, 
   3.6922900585732183`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"thetas", "[", "i", "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<\[Theta] (rad)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(5\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(6\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(7\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(8\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(9\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "3"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6879725637612123`*^9, 3.687972680331653*^9}, {
   3.687977730322206*^9, 3.687977754225321*^9}, {3.687977873660502*^9, 
   3.687977891472331*^9}, {3.687977931289522*^9, 3.687977942173959*^9}, {
   3.6879780043381577`*^9, 3.687978015233514*^9}, 3.687978132790614*^9, {
   3.6879781714197073`*^9, 3.687978182022843*^9}, {3.687982526598894*^9, 
   3.68798261414132*^9}, {3.687982874949993*^9, 3.6879828967394753`*^9}, {
   3.687983028353971*^9, 3.687983064856092*^9}, {3.6879840941615868`*^9, 
   3.6879841114337997`*^9}, {3.687984307239612*^9, 3.687984321351467*^9}, {
   3.688448230716132*^9, 3.688448237987153*^9}, {3.6893524538948317`*^9, 
   3.689352530628141*^9}, {3.689352576865576*^9, 3.689352643668426*^9}, {
   3.689352680547752*^9, 3.689352689987965*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
UKSjomYPyvT6+EY6XgW0Pw411on0oNJGSr5tkgpI+O87nDXC5k9O70j6yOYr
Jt7YkdeNRh5orY6nqADTzrb50ONutNyJpejpKnDu9l2SkGU32rRLV9s9SwWc
g0Z3UhS70fbQ4lMYq8Clodi7mSNdCPZWPTMoVoF3pndryFe60OEXx74FlalA
mYRDtgahC1lNNtbWVKqAkIp5c0N7J/KJ7RK0bGTzb2+/Lry/Ez1dsCO9aVUB
azDZXzrZgd4eGTYZ6FSBMa+LrYdfdaAirulHzkMq8N3YNW1jdTtqOOWWlD6m
AvY9H69EibSjgZSl4qVJtn/yxE4fONyGNljzrL2/qALSH04W6n9vQUY/xTxf
8qnCN75tqicONKIz216+7hBQhU5tnryyM3/RVZcdOfKiqmDT0D2xz7EBBcsR
Fj5JqYKvnN+hNJ86VO2j6Vqgxh7zFn8wuFGFTuievjBqqgq5PSF/Mo/9QBcj
O/wox1QhzNqwcH5LLnKftom7eVIVDtO5/hv0+o5evr3SxWmlCmMvXWdTTT6j
Nu57p8VcVAEHV69YnPLAY6fX3La4qQp/I3xYOmcj8OrX+xHRt1WhpGYkn+Ac
h6VtQ+qVfVVB6NXaIRHtVGxdGGOKwlRBODA5d9X1By5yd3O/FqEKIVo/rSLp
PzGBdOhtzCtVmH0g+oS3qwA/7JUvr45RhcwNqR8X3YrwyIuluTXxqqDr1h+m
9O8XNjGtkaEnqYKh4kmh8+dL8GeepIN2H1XhTVhH7Z3Pv7FQluf1ZymqUDF6
bJNdbyl2vWYeVfxNFaqP14QLr5bhenm1kn+ZqnBWpiLLf+kP1mjmnlLGqvDK
Zfe7mpZy/CKkWfL0TzbfO7E3eaMq8NL+FL3AX6qAGkjjCjKV2HLR/1puKbu+
P2t026wqcd7nsy/GK1QhRqeAc/fTSixrxyiQrlWFLe9hW83XSuy7jX/s8F+2
HjfEqMSCStxX2S3u06IKv79kHqn+UYn1/TJ1vnaweTSKH9D5UImTtB5f7u1R
hRMxg0Gj/1Vivgn7MLFBVfAcPligdbASX43fgw+MqsLuNc0xC/MVuNJCdNBt
QhXuHjrwoJ5cgSmCI0JJM6qw+q2eC1A5DivK127+pwpO49Tc7Tv+4PnbEXZ8
K6ogZXvh4b/yUnyKfC1kNxcRDnyiDbQc/I2z+/Qyr64lQmCW+opmaDHeHinV
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
c2RwVNpxCqI58v69eDgzYkUGywlpoZsZHHnfygpLu23IcL948fxgOUee8wpH
bJMdGcCZ4++Tbo48NZK2W9UFMsjKTdQ4z3LkDZ+/aVJ8ia1vUpi39zrOvMQn
KTuxAxmUIjyacsU482wKRxfSrpJhOWQ1Qm4nZ57MHKHq/TUycB+7q/denTOv
jWCT8MaZDFMb/yOaaXLmvTgVdfeFKxnMkq/ai+lw5pkHNB19fIMMX0vEW0b1
OPNEckWV/d3I8Nj/kkGdIWde5bgpxz13Nk8i1eiXEWdeoExA/fU7ZDgjUHgp
lz02PPrrvYMHe/5wnUwae/3a/7h8rD3JcNSobjKOHe/nt90nT3mTIftsu8sj
4MzzHHBTP+zL9l/roXPnNDjztCW+8uj7kSGe+/u7HWqcefMHx5v3+JMhU6T9
foEMZ17aXeUU+kM2X3OB+4bCnHnOn2z9VQPIEOFR/uQDF2eeWme0pVwQGYYv
nOcaGufIGxJqoUmEkKEvfPfjpSaOvARdcV7BUDJUvta37frJkWdz40jnuqds
/57iXX2exJEnnRiYvhJGBr06dcL2YI68lsbiwJlnZLhuXPvX0YkjL4KX22Yk
ggxvj2GRgMMceUKO7gJNr9h8Kd8dt/Fy5FVEp/VVRpGh99w5M6GSVRxQzcr+
FUMGwzrdUw43VzEPw/5iWhwZGmqXs5yLVnC+fSx6n8D2+1/jKS77FewR0Sr6
5h07Pv+V7X+5VvD80tH8kA9k9ntfef+gyjL+qhb8/P4ndr22dIuujCXsdO73
VY8vZPARu1n4HJbw0E/Y5pBGhu9uFpHn0SKOn7k9YZVOhuP7vP+MpC1ga8X0
Xye/k0Hty7DdToUF3PKQ6Hoghwzj4aRTnJPz+Hn2BcM9mAztd5NvpBvN42Nj
b6TpP8jw/I28h3bUHC4/LPFHtpDd/y0qwWeUZvFDn2Nvtv4iw7z/dHTL2Rl8
IC3klkAJGU4XupElA6Zx3pZ1CitlZJjxttQ2KJrEdw33Lk2Xk4EZG6KyUjeB
d925Wz1cyc6nwUbFpJ2FZz9kJHZVk2Ex/m7WSsk4Tm2f8misJUPgwC1tmdpR
/M338k7pMxRo0VW0TqouQi3Vh+WlzlLgVAm18Y5RCeKU0VCQOE+BKyUtu6aK
S5FRDjdBxJYC3OmkJLVzlahz5pXK+isU6Nqd1cTQqENrdX1VeRwpkCyoslBq
VY9UQy8RuZwoMNKVVHf3fgO6ocZUX3KlwJ/s3hzDnEbEZ19JYd2hwGfbJWJO
VSuipH2jjnpQwCc7pKTgZxsyX/OKNuRJgYjig1tkP7aj2KiLjB5fCgjaL+Up
futAzL9cu/4GUIDCK/XrhGEXOq0wuKsuiAL1A3tvRyR0IW/XCq3qEArsqM5W
VOLqRmUCkbvLnlJAL5AjVPdzN7IyoOvkRVJAvtnF7/6/HuT/bNvenNcU+HAi
h7rLsBd96OXclxlNgW/mRkO6L3vRvFe57te3FNgppXKoD/qQVOXX/V/iKSDr
+k5uIbwP7d3+Uu9jIgX+zedLX2b1ocBMe/3E92yeT+WnBr/0o5T1JgZxHykg
uXGLdYHkAPp7nGYY+5kCuThuy5eQAbT8VuJgVAoFhrr/HOjZPIhkpziMIr+y
eT1Uur321SDS1+k3ivhGgSOf7ZJ1tYbQleA/xuEZFOi1S442GRtCoa2pJk8y
2etdvobKZQ6jDJUXh0Ky2fEfFvU7xo6g1luepoG5FDj+6vkk8d0o4iq2O/ww
jwK7j/i+flI2hoxtqEd9Cyjw9MaYy6G3LOScstXMq4gCW3kIHhv3T6DnHBzH
PIopMGd72OlBxwTqiiw77lZGAa/P19DF1Um0fjjF/Ho5BVSjxTnfe00hombE
CedKCrw5uZBivziFjty/d9KxmgLn/nr8Fr4yjdzqbE851FKge2dsLLlhGr2S
M7K4WE+BVYNBmd27ZlC+E+W03V8KFBxpuhsfPoP4N62eOdfC1ltRZ5fA7lnU
8jDI5mgbBYxc21b3+82ipHXbL+t1UECUy9rY+PcscvP94KTZRQGOn4055hvm
kB7nbjfVHgpsnP5vU/C+OSTiUeaxo48Cn4YyJcRuzaGuBYv/hAYo4JJzP31D
0hz6fHP4Ec8QBTq3xzp51c8hj2n30PlhCrwz4SGHrMwhI6eNEcOjFKi+/LhI
V3YeSYxFRLWNU+Aw/zm7JJ15NHBJKb5qggJVuz8LlZyeR9/6M94XTFFAfzZ4
Ic5lHvna6Kemz1BAgS5Zvs9vHh3pbPieNEcBtdrVjW+eziNpS/u8V/8oQB0d
35v/eh6NNc0WhSxSwCT/xZnXb+dRtrnfH59lCvz8m99AiZ9HD2tFa2+ssutJ
DORwfzOPThyOa7rISQVeDWXGlch5pFBO6zy9hgrpm0tkeR7Po2nDgv5DPFSQ
uP5pQdNrHuX/Ojq2dx0Vcse2Za+5Mo9CdLun6RuoIEV55HTKbB5Z/nBeJPBS
gTOg6AaDOY9U93BxSfJTgae7Ly9EdB4tZD5ev3kzFUzCqpWsx+dQMVNmM5cg
FQ6EH8xNLJhD4V8/i84IUeFnccQmy7A5xP5USw6IUMHo5wsvr/NziPKxQrZZ
jAozuywThZXmUHnCmPoPCSp4VZOkniTNosidHoyvklQIWviiF2wziy7F8O9O
2E4FqzBppy0Ss2jtS1XDQFkqdPEPF4q6zaBa8WxTz51UMOO/k5EmPYNinx40
d1Gggn24mvuuwmm0J+iSzUllKlxKPth4g2sa8fEuXDJSpULLCd8o95dTqOn+
AyekRoXLsGf7ImkK3fBK9JCnUOGf/9AQ6cgk+uTa93xCkwpcxq0rii4s5DFx
PapHiwpTHIfKTw6PI6OrPPENu9n5v7QeSxoZQwP2O1NzdKjwld/1y8/eESRt
YfXngQEVRrwjgsezBlCIThun7Ekq6J/8lpWh2oEYl4uNkAUVzjrIb7iy0oqa
n6Y8O32GCs8T5YQTopuRwoAf8dl5KjT+vuN2o6keZQepn+S7RIUioddFjiK/
kVXG1rdKDlRIuel02IKzEK3rWjOud5UKe6Tuncx6j9ER+l9fL2cq1MS4bPz6
8i0aaPb8POtOhfmcg7+KIR8H8VxeFL5LBdVbC5ahX4oxVf2YHvkeFb5begck
XK3AHt5KLZd9qJBg6b9300Q9FlGqXtf5iArkA7vMsx27ceaR7CMrgVRYgl+S
Lk69+Oyd+FfbQqjwRel7nbJ9P06qcKcef0oFhQ8lnySkh7HpPxsPl3AqbHj8
i/Nq+wiekT1Uwv6zg+/HDbKqHoxhuCF3tjSSCiEHxC93/WHhvij+pIHXVHBO
vixh4TmBH5XMTfPEUIHPpOj5a/lJTJrqRHJvqLBQ93zn3exJXC9Z9hDiqBAf
IV8SsG8K39H7VncmgQq4zOoP4/sUlrkWLX37HRXO8+29VrdtGhdFPLz8PJkK
PS2fOXsvTmOHn67f0j6w4yewbunGTmOhUUvOmk9UaGUqed8omMbpYgZGrC9U
oFOu3S+tnMangfqM/ysVAtqII+eLpzHXJaku5W9UOHGTXr/4fhonPllH1M9g
+2dmTCvHcxob50zctM2kwvqHu52H9k/jyb7mfO9sKhhID+5KX5nCzwWK+KNz
2f7eImKk/GEK79n1+UROHrv+mm93BI9O4W7rF2+a8qlwLvzCdY7JSayWflVT
9BcVfLYY1e6SnsQFZ8RtH1ZQIZLVOXHjJAuzki5ku3ZQYevVkDBOg0GsqPtm
9EoXux/N8ad3VgPYsrV1u30PFTZXUJ/L3+zHpZuPep0cYOt7R17L6kEv5noX
mHJkiApy1Z56n7x7sMbe4u6DI1R4s31i3+CVbhzvultvD4sKf991aflt6sSt
/G43mZNUyLOi5h/zaMciCSmJpGn2fRB9KNvtawv2blTklZungktPUPLdwnr8
3dlKW3KBff90yv68V1CDWbyvrogusXkcemdYVl+Jz+wRqlzHQYPEq8SZsbwi
/LTBiJOTiwbZlB3eedk/8O9r9ykLa2hw+NGx/XvXZGKNN0tPR9bRoFXy1N1e
zRjsqM0s6t1Ag78bxn4OXLXC8XVOc228NOB6+mBj++FIJLK+/2TVZhpQxy9U
zduloYMxMo9+C9KgB+sFkmWzkfeu09k/hWlw/ch11W8mP9C4Q9X2b+I0yFGe
eO54/Rf6XZXV/WIHDfY+1HhYZV6FOC/PijyVoUHlBT7x0IRqpMFN1guUo8HJ
Bde/puM1KI4Rn3hPkQa3OVrteS/WI8+XIVds1GnQK5kzcF2oGTFtbeeIiAZu
5koP6T870dWVKIKiDrs+7+brKnu70NtnTSel99HgyysVST/chYR+H8oWOkCD
7uNKgk/SutGY2i6vORP2vDdf6vvgXvR2fhPvD0sarB1fe0VxYQCl7Hnr2XOO
HX/jDrVjFwZRnq/m7DprGhS/v8drVjuIWgVsOk3saeBw9ONl57ghNHL833Hn
izRYo/Pjp93GYbQQGVQWdpkGQgcppvUOw0hM6Xt6iyMNRtWLyX+URtBORxMi
hzMNlA/llyn6jrDfe92xcq40OKdteO9t8wg6pLMp6JIbDWRSizZ/8hpFlvff
rAlyp8GOw6qbRSpHkcMfjVtf7tDg3UfzGINtY8j/pLXNvCcNnolynW1LGEPh
UfON23xokJx6V0BycAy97Q08hP6jgYCwsEe/wjhKUZErtLpPg+OaDTmU8+Po
h1PGLr8HNGC27dsy8WwcVaYbf373iAbp4wc2i5eOo7blLvk/gTTQ+5Bh82Jh
HI3sc3vJCqZBXuedzZrCLLTwgF9QJJQGdjP39A4qstD6ylg/5lM2X0W+OE9N
FhIT01g6FU6Dxs2T0fUGLLTz9B8nj+c0GIzjO3XwBAtRY636Y17QgKwaHNlq
w0J7B+ZOF0bS4OmHpO4ARxYyVQusHnhNg6gs29Mn3VjI0lVWny+GHe/a9MC+
eyzkkJmeo/6GBi/5snaa+LKQO4cx9WgcDSw7my+432chf72uxBsJ7Pl4u6pS
fxYKD7i5/cU7GpCK+ffpscdx1XxPc5LZflX86TT2Hwt93RK7ofMDDV5YZfSX
eLFQviXzHvdn9ry0AX/7bRaqfFs2rZhCg5IETzLdlYXahs5fOviVBqdHJkNr
L7HQCGmu/eo3GiQd2Xex6Cybz42AY6EZbL/zyY2LHGXzyZEpTcukwcKdlw6l
uiwkviYdGrNpYN58TWeWxkIKBkbflnJpMPbIczxWjoVowZ0q0j9o0P6gY2eH
AJvHNj5x+0IabHRP7osoH0eW52MCHv6iQVx0girEjCOHBAbXxxIa3CsY+BHm
NI4eUM+PTv+hQWq2v+s/3nGUf/DbT+96GhTttT/TrDqG6HfOXXvdz+7n44Oe
QodG0Ajr9XD6IA0uxye1FImOoFjbVruqYRrgD9cD7FuHkcChU2e4WTTINboS
POE4jEZkzAwvzbP7R4LPZvjNEHoTHlros0CDm/7Kd8ZdhtAp3ip4tUSDtjXk
V3O6Q6h42phZyUGHnU3G+84ODqK3vw7sZGygQ0ha5L5y2iCy0PaLOsTLHh/I
XuO/dhAJfSmQuMhPB65je6xVGgaQ5wsdwUhBOqTNHFNocxlAzM2eAWnCdAjs
81jQRQNozCd3XYUoHZ6WBKD96wfQ6StaK5wSdJh7/Ype/LgfCXfdurVNkg5K
Vt5JCYf70e/jGdO07XQI5lC408jfj7xKZx1NpOngLuIhwVfUhzSAPmwvS4fe
5vTmkVt9aPyri53XTjrgvioJRaU+FK+U0vlCgQ6e8pqK1jW9SERY/e8fZToU
WqSVXBLvRaX3rxztV6VDGZHMeflzD/JeSi7nUKdD0sYvmtV7e5Cm05CBBJkO
17yGraTLuxGrl1BIpdJhOmDd2cLD3SjhlD0Y09n1Md9/lvzThSwr4rLsmOx5
8eOj9qgLlWXIpkRo0WHcLWOQxNOJfIjniam76XAz6mnb+eMdaFdsVGIZooN+
VdPSS2o7mhBrk+vTocMHluffjS9bUeIjyajVfXTQkdslJN3WjM5yWEhs1aND
wnb8++psIxK7HhFG0aeDfRAPv0NzA/oz2CBgZEgHtfZF+btedcjXUizA1ogO
EtEhsS//ViOtGrN190zoQCAeuH05rAJNHnji/dyUDn9ROvpzoxi9y65a/nKE
zXtV4GuIdB46Rxa4VWpGh1UjNVNWcBISjzeZ7jlOh9ZvRr4Py17gcolAx5UT
dMiouhuhz5mJtbk32pHP0MG07+qUq0A5nnLT7zQ8S4cbL4TWHPhVjZNG/U7b
nKfD2CtKUB7U4y0Na44+s6XDG51W4yuPW3DFwb3ln+3pEDpKDu241Y798jwN
fl9kn+fktlZKuhNPvVtGy1focLW/Pc8quxtrBwXETDrSofTnW3H+nh7s67xt
zYATHZqSRu1F1/RhES3NourrbP3mkXGB8gBmlLkaJd6lQ5+C6Bth6gh2Gxs+
cTSQDs708D8nf0zgvGr3TP1gNn+9aGak+iRen75Bcs9jOhyQFNwSFjmJI+4p
thPC6LBRaMw2z3kKZwpY265E0uFOREXI/OYZvERpcnr3nu2vbq5mv7XzWFf8
Ys3rj3SwTtOpHzkzjwMW52hPP9PhtuJJ75up81iqQHTe4ysdDvfYyeSe+Ift
Et+edP3G9vfv5fQzif/wxwBq1sUMOvTfNnk2OPMP7zl22MMsmw4BWjN3Ix4u
YD/NjnaDXDokSnywSKpawOVSjjoojw7q4p91vMQW8dm+AG7lAjoIDGoevxix
iD1vFj9cLWX3VwpXyA+fJVxsYT4y/YcOtiMf7j7LWMIC0Gc8VEGHX3fGl2SG
l3DMem7Buho6NFNcM88YLOOhkVDn33Xs/ijZsCRyfRlTqmRqcQMdXuVEvQ14
vYzzI9CzpGa2Xvm0rD9Dy3ijR/l8VCsdNrRrbIjmX8FHrM6cCmungxBT3VxX
bQW/0BvJethJh89FL82x0QruVr4t5dlNh+Pf6r6LXlzBqps33rveS4cVj85t
Rj4r2HXqecelfrYfYz8t271cwdkNinvPDdJBuKct7dKXFcyd/e3NsWF2PPsf
9haFK3incbTB9VE6PF890hf/dwXrtj0YfzpOhyCW8/5HgyvYxtEl7OsEHXoa
KTl88yvYh+OMVu0UHQqka0TVuVdx7GO9zqkZOtgIl0fP8K/ifFnSfeF5Olz2
/kexFl3FXalbidQFOpQ/Ze1wl1jFXPvX1BxZokNUP4WhLbWKZetH3JxX6FC9
eDI7iT3ea1+/PZSDAf8kJ64WbVvFVvO44AsXAw5t2HIvWHwVez14d6mKmwGl
e8sf8wiu4miJJwITaxkQWbyIFdev4rzkO98ENjAgqzc+fHppBXdo250m8TLA
e/LJlkvjK5ij/BCXKT8D5maX8H/tK1j6rGai42YGONrHeer+WcHAkjUJFmTA
fHNVaWzGCj7nxTf9UZgB1bouTyNjVvA9odmIclEGXDy4y4zov4Jfv2lHY+IM
0DZ9KWjqsIJzaSW9/BIMqD9/zH7VeAWvHI8kG29ngOq4ovXIhhW8feC/Bgdp
dv6vm29L9SzjPbcc7wbIMiDjvLFqftYyvvtyb0mpAgN2l+fUGlov40hVVcdh
AgPaHVTapKnLODtHVJRXhQGhX2orTDiW8VL7wDlDdQacNciteBa6hCWdqtde
IjNAS9XFKd58CWtzZb9/QGXAhtvMS9Nbl/DtncHzxUwG3LAoe64dvohfpLm9
HtBkwBHlYjuS6SLO1LPSXa/NAOMTuTvM1y3ihQv0kAPAAPm0+kJ0ZQFLLGxn
2O9l65E7ened5ALe9Wh9i58uA9JeFihuKv6Hb31oVizSZ0AB37nPS+L/8PyE
F9Y9zIA+61iL2edzeIvPZVubowx45Nxvq02dwxoix3h9j7HzdW0OOVo6i28y
COY/TzLAaleCusvMDJ51Lx/TsWJA6mzZQz36NJ5as207cmEA+fjD9ux7LPyW
+1jSrusM+CCu8CCfn4WP8wQzGDcZYBSqL2rAGMcZa9ccIt5m632ZN+uB/Si+
s2H43jYfBmyDGI7g1EFM3CjPJ/4fAyotGyoM8wZw28azz4XuM0BY28S5oqQf
A1/N5w2PGGD3V9z6WlUv5t6c1TkXyl4fOmxe86YTp22euTL1lAEhTzaWVd3v
wHYC6gtj4Qxos3Rew/mrDRcLvhHqe8GAhZWinCuLjfiWUOvrzkgGPI/7uTHQ
pQErC4urtL5mwEYrlrtoVS0OEHm0rzaWHZ/nomXh6XK8W7SwouItA1azbTMY
RsV4THTVojSeAbHRUgEv+35gU3EX1/wkBkwfTX5tWR+FObd84Mh9z4DZaOMh
ZlwkStnSH/D9IzuezD1J4XXpSETCIu5zCgMyicF+HBvKUKFEGPn9VwZcnj5g
aSVejW5sq8hJ+MYA8/B1hyXG65Ci5AbDNxkMmPLjkWDZN6K/kvvqX2cywHD3
o54quxb0QOqu1YtsBqiUqwlvbmlDu7anj4Xlsvl/z40rOt+BhrdPuD/OY8Di
lw2DYYKdKHKHyrrAfAaYzZpNdPt0ImNp2yf+BQzwCvxk1ZXXiVako3b4FjFA
Ye2xj4JVneiTTGPyvWIGpIhxtZ/I7kTnZIU1bv9mwCe/VOuoB51IUM644EYZ
AzbXvfqZtacT5cvdN3UuZwDLp8wnoKMDuez80XKlkgHNFYFJO1w60E75xQsX
qxmgrCnlmzbVjurk6TM2tQxYCStS1hpvQ34Kjl7n6hmwNHNcL7u1FQ0odkeY
N7H7zUgqmP62GUUQpBSOtjDgktnT62SfJmSoZJ5i0sYAkkDOB3PrRvReufT3
/i4G2Hb8zdtGbkBnVHjMdXr+73ftW3Oy9WiTKurW7mOA9LWfud7b6xBWveWo
McCAV/NbVsnytegaMXWROsQ+bx1lv7ZGDZJRG72vPsKA91zWj6NOVKNqNUUR
lTEG/ByXH5e/X4V81c9HK7AYoNPcZX65oBLRSS9VZScZYF+qZNwjUImCznrk
Ck8zwDLnCxpvL0cDQedNeWYZ8PfYWb5z2X/Q3lzdrtk5th+1mmIupZehyFFF
14F/7PPrvvIcrCpFs5K8a5sWGfAi5uhG+sZSdMho7FnpMgP2ZJ42OGP1GyXe
rlLKWWVADK/suZXGEsSV/DXrIycTxrf+mD3hVIJONz0zjl7DBIFJnYz3hBL0
bcPt9sc8TDDmZPEpcZQgAU1LJ591TFB/+fl57VwxunhBZ831DUzwbaA2OWwu
QfnPdobZ8TKh8wP3dR29EiT5a53iCX4mPOj+nCH4sgTdmB3KMNjMhJDFlvFp
3t+oUr7cUEuQCessnoQfC/+NlI99aVEVZsL3uA0C3MxS5Ov79Op2USaUvasJ
PjtUipjdp0I5tzJBTspiIf3WH/Q6ur/xlzQT3MfjZbmvVKL5it+Xv8uyx8LW
e3T+VqIjqx+Wk3YyYTmlWchPpwrxWLrKBBGY0HEIjvjwVSOHbZwXzUjsfNwP
caz3rEFFhj0L+ylMOGo9ZpBcV4Ok3X8FMGlMwN8Kj9wg1KKav4GfJTSY4CZm
Y2ZSWItU1zvt5dvFhARTUzmOzXXIj2lWu6zFBIWXVjobj9WhDjum3fhuJuwo
nd6cG16HdoVLzHcgJrx/vyVhU00delq4/KBahwlrnTq9LqyvR2PTHdsK9jFh
ouDa/pu0eqS/s+BD2n4mCDe9WV9ztB7FHE1ACQeYQNq0RzzkfD1a8H5Y9dyA
zeuc+bZvx+uRWcoV64cHmWBwcejCD6V69LHTdOa2MRMOVSbTgsrr0HpB2v0r
h5iwgTNF0IxZh6xAfOvZw+z8XFlkmnktynZcSDI9yoTGJzZLmfI1SCyqVXvv
MSaYpXzq1YupQo7leeVUcyaI6xLCTr+qQMXLb87Jn2TCT1fV3w+ulCJZ4v1J
MQsmSCo35Zj/KkL1j4zFFiyZcF4vPeHDrwxEyiIlDp9jgm5fWFPYjmT0YEh4
V6sVE/4OqbbYqd9D2gZNZ/LsmMBzquP5039p+M1a+zi/q0zIz3RxLNpbhWu7
3t6OvcaEfymXbz/UqsVrcdfhXGcmBOwwURAWbsAXblquzNxggvXVXTGqFi04
4mhkreAtJnA/23Jb8U8b/q3elES8zd6/+i6sM7gDqw4cM7e9x97/WPWgYHoX
PlPwhOjlxYRfsZGknG/dOCi6as0rHybU6hzM2pXUgydOGH+uvc/m94yj/D/H
PixLf+THesCEZOmvxiF7+7GZYMlpvgAmDN06eWuAdwB/K9HdoBvChM2xXE7g
M4j747zbz4YywVt0pXKJPIS3eOel3X7KBIvNLya8/w7h27u0rVKfM+Gu9r+V
If4R/F7MXaPiBRNObjhtyng1gtsm0zcNRzKB01Vyi7T8KIZkapZsDBPM+8RJ
x3aMYaf7To/3vGGCyw7PqbrHYzjW+pP9qTgmcIlNGp9fHsM1aHT3jQQmnD60
ac06q3HMLakiEvqOCZ+3dljW4HFMn78w9CGZCUu3ttba87KwXW18XskHdr/H
0/Z7UVn4+eee8N5PTFCruqGtcYKFSwJkr3CmMCG40WBt0C0W+/1xbp/UVyZ0
HQQ1n2csrLr/9VbNb0ywJMM78RQWPiPTMm6WwYQYYK4YlrBw0PLWomuZ7PrX
jThItrIwbjSPDMhmwur3IOFHoyzMSgtzTsxlgqLsd6HwBRaWCa3RL8hjQv0C
5bM29wQ+clVwR0c+E1pNpN08Nk5gH8NDM4sFTJjK+HLagn8Cf1UILBX/xYSH
krq1NXwTuI+rNIZawr7fOjJnBtZPYPH29W6HSpngZ1MQGsk5gfWz9Ewu/2EC
5DFNJ2ZZ2P2Z7877FUxgPCZkDw2wcLJL/kJsFRPebIg9H9jAwi2HOKpya5jg
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
nkeVHconsbwyfGVzE8hosUZVMjeJ/wODEBeQ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwkl3k4ld/39495nud5nqU0kKi9klJKnyJCREJChRJRCJVKQpIQUpQhklnY
J0kq8xSZx8h4znHMw+98n+ev+3pde6+13mvd9773WnKO18yc6QkEggULgfC/
p/zTjTfJ0q8PiG4zOrMmt4IsX86dZnZNQbfV/j9bUU/tol7KQ7zae/8f/645
ILmUWoA+x3WY/4/peTqSKU9KkG500un/sehu2UGvsDJkJu1w8n+sZe0uN+//
GanlU4z/x0aBxY5XvSoRfU2L/v/Y+g3d2+lLGKW+71X6H+s6ZXjvySMi/g+v
tlZpXL14/NmNrC/oEa8B/h+bPiQVFKRXo2PHBCz/x10SL9rJqV+R5zgld4XG
F3MNqNpJNYglcTp7mcazMCzk9eIbqjoYrrBEY7+2BzofY2pR77WAvgUaM7hs
Ozv35DsifK+NJNE4crnVV+thHXLxUOqY/l8+j/3ir4T9QHUdI9rjNH4jJV2W
E/QTvb6rw9j3v/w+fu2e8v+FipeaQpppXGZ4eVX9Zj2KvqhWhP+Xbwe3hJtX
A0rW3umRSeOmS4X6mR6NKNSscV8EjW1WrW0nLjUhST/CVRcae9cGVT3Tbkbb
k8cYdWhc+rT15K68ZmSn8/z9suwK2rBSGmjVbEEnpqbfZNPYUN7vmndWCwoV
O9lznMbhUz+3+FRbUfrEkZoOmRXUUCgVlZ/eiuwd5O0O05g/0FP2tEIbuvPx
mGKcNO39Gn/9OJ/ahqyQE89XqRWUzCt8MEq6Hak0C4XUSq6gkW7Xlu1J7YiQ
Y2iUILGCVN98vtAk1oGYVXJ9dcVX0FUPbvLVFx1oW3ZPRJzoCirccyGEW6gT
zXWJ6+YJr6CVzQL+3JhOVLZxy95PcAUdqGN+Y8r7G+2++VV4gm8FhUVb75p5
8hsdGlK8T+FeQT9tcr5GcHShp6Ff+yM5VhCP4pa55sMudLNrwvgDywo6M3N6
9BdzN3p6lb4eGFZQQvHbG+5h3ejbhJ3Rvs1lNBC0xMhB/wdp8X869HB5GSke
M3meFfQHiTl/3JIgLyM3/ldKJht/kCbrE72Bf8sor2euaNK/B/36NK9UNbyM
Ft4aHnm43IPqk46fSeteRvuuPu9UvdmLHB4wxV1vWkZBuhMudZRedIGneEyk
ZhnVEPSXLnn1IRFq08nrJcuI/eeTByxzfchxr0znpcxl9N+zQZF3Hv0oVCXm
YsfLZRRru+v9kX/9yODWhw8vw5fRH6X7e8cvDaArkrdVonyW0YZi2IDw/ACq
uqpbW3R+GfHyH/yqYDCIpD8n69gcXkav+YjCBsGDSF7+pf9htWW0kw+5nakZ
RLp7rhkasNP08FZVerAOofDKeOrW3yVkwbuf796JIdTA1Vx3snoJjfNUOL2K
GkKCwV0jI/FLyI9Hv7SofQgl3JR/6eu+hNh5yjkaRYfRiuXjQqy3hBK59ezH
bYeRXMKVoWsMS0iTu/TTZuowepB6cvu+ukVUxaXLLDI2jMy1HxQ0PVhEp7iK
rberjSCzY79Mhw4uoiHOPR+Mr4wgVsG/j2UXqYiRc9cZP+oIkv61Ub50nIri
OD69i9IbRSSf6qKt6QWkwqG99v7OKPrF0lAp8mABlbJ/PPnlyyiy9vi3g0l8
AZmwb0/rZhpDF3fJp8emU1AvWy6VdGwMzQBrXoIaBV1h23aMPXIMMXAKXFxI
J6MoVo35fcLjKCfxhovhAxKSZ806ZG4zjrxtD16WmJ5HBSxqL9yTx1FB9sMT
vMfmUSezyoEk5b8o3adl8XvnDJJkUojY0JlALcwbcaUZf1EuY9qAUMAEcqVP
uKBFHUOIUW6XFp5A14BdY+eeUeTIIPPnvPEkijN3DP/2eBC9p5NQJZ79h+7I
NcRftWpB++gSAroS/yHugv2v2IN/ol8Esab5gX9oWOe+m+rBajS7JXxTznUK
SXdVbGp7RaBdm/w1IX7T6On1xHFRUgOu2YgWSayYRjWcb/tGi1ux5QavewFh
Bl1wUm9Itu7Efuvc/KPhM+giq/KF88Z9mH39ifN6/QxK7tqTdOPoIE5c4ywT
5JtFjc8zPrT0DeGqVXaHwy9n0ZiKwMOf3aP41OrDAru+WZTeE/ZNG8bx0Aor
y025OXTjvyMTxLi/mHGFOTcjcw5dGJvKXBf4h+OW79HhmTlU3ZhZErhvCgve
DsmaEp1HsSZiox2npnF6AN0mg908ynbGvztPzOKQhe8RjbfnUfQI3Y8ahTns
cCVS4mXSPLKcMgqPnZ7DB8bPZF2smEdxTCTmHPN5LGkvoafVO4+0Y7ouCmXN
49XfQ9+X1+aRD8uU/MuVefz71HvLrxIkVL1r/sx/hiRc+OPq2BN9EkpnCLph
EUbCMYZ7blidI6Ho7D1ujZiEPT+v0SsEkFCCfs+t4QUSNt1dHT2TQEL/rjeK
YQUyVv8QLltaTkIZllOlcSfImFX5v7yQPyTU+ubn9dRrZDyeLHTAdJWETp6z
rBJ5QsY1Ir31IuJkFPtihMEgnYzTotLODeuRkX6j+/5TpWQcxHb5X441Gfld
1AhJqCVj25Dtt3xvkVHzr7Loi81kvG+NymL4kozKjV9ZL3aQseiNijjOMjL6
OxN5M+U3GS9Ohyj97iKjXbwsBTm09XbnY4Wvl8kIS2iEedDs8/t5DnmIUlCz
SN79bXVkHHm2s0VnLwWp/3Ha3F9Jxh7NSQ50VhR0MMDMZiqPjE2OXZz75UtB
1yre47upZKxSrRYY94KC5qO1Uo4/JePhguJEjd8U9ACi2+NdyZioeUd9cZGC
NvgVnNPNyTg5/VAZUXgBPdOXvrS0n4ytXzR3WlguIMWiWzV2fGSsw/vCWfbm
AjrtxMo8skrCgg/tFv49X0C7u/isno6ScLP/P77gjgWk0Sv7UKyMhHMpH1NN
qAuoOuBa5Ym3JPzYw3e7kBAVcXTHPTgdRcJHzjOaZp2hoj1/+Uin3UlY8ffP
nhs3qEh734mpMBsSpjsV7YZiqeh5QxTjsgkJ99edXWErpKJzB9MHKgxIuOKg
dHh7GxUx/TnENrSdhBPKR4VTKFR0/+4q4aoiCfvtyk6/LLCICAqxpy+Lk7Bl
jtfu3bsWkedg6ud2PhLepbT366bZIuqmCnvlspMwb/Lm6R/eiyhiUN6RxEjC
s8LfBp/FLKIBoeS45wQSrn/6+Nr5T4uI/TclOmpjHmexmm2qti6itZqXFR1r
8zj8rugTCmkR8TjyNFrS2Hm1X6KKbwmJpzvvYlyfx4bX07PCtZeQsSmjZwPN
XnbaXc/89BKSNLW/8Zrmf9NpZ52U1xLqUjT7d5UWv6dv2XIiagm9dmn3UWQj
4VJLPPbp4xLaJbk++ZGbhOOa7t2407yEfg/ZXmcQIuEbR08wHJ1fQh/u3irl
kCRhsy/8Mfy8y+jhdhtSmQIJcxWk5L37bxklfuIxq99NwjeFV+Jbry6jcz87
Q0f30+p7yyxk4wntXhv4puxiTMIfgcnCvH4ZqVkPvPA9R/PX6La6eZTWt22t
Hvl0n4TjJ/cctjRcRZHpHhsmwyRMMH2qdffCKsqPC6//PEPClz9OiOQEr6K+
/T0NEiskvM838R8dXkWWHuYTCTxk3MdIF/VBfw35zvNTjfXJWF62/g/jnnWk
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, AxesLabel -> {
       FormBox["\"time (s)\"", TraditionalForm], 
       FormBox["\"\[Theta] (rad)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(5\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(6\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(7\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(8\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(9\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(10\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.687982610723823*^9, 3.687982614545828*^9}, 
   3.687982817061775*^9, {3.687982882405509*^9, 3.6879828970876617`*^9}, {
   3.687983030375231*^9, 3.6879830654742813`*^9}, 3.6879840785754347`*^9, 
   3.68798411196517*^9, {3.687984296143344*^9, 3.687984322466475*^9}, {
   3.688448228062645*^9, 3.6884482386610928`*^9}, 3.6887413305737953`*^9, 
   3.689096218687194*^9, {3.689352426292139*^9, 3.689352455504768*^9}, {
   3.689352489852323*^9, 3.689352531069909*^9}, {3.689352580931394*^9, 
   3.68935258418363*^9}, {3.689352627459231*^9, 3.689352644418778*^9}, {
   3.689352675028427*^9, 3.689352691190508*^9}, 3.6893530486351557`*^9, 
   3.689353082416341*^9, 3.690225438710162*^9, 3.6904204274048*^9, 
   3.690481413821362*^9, 3.692289919272743*^9, 3.692290014514286*^9, 
   3.692290058953698*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{919, 681},
WindowMargins->{{167, Automatic}, {Automatic, 9}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[727, 27, 173, 2, 64, "Section"],
Cell[903, 31, 1860, 27, 28, "Input"],
Cell[CellGroupData[{
Cell[2788, 62, 2442, 57, 80, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5233, 121, 1230, 34, 46, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[6466, 157, 3255, 103, 162, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[9724, 262, 877, 19, 46, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10604, 283, 8130, 207, 129, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[18737, 492, 1344, 30, 63, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[20096, 525, 34761, 668, 185, "Output"],
Cell[CellGroupData[{
Cell[54882, 1197, 4028, 111, 114, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[58913, 1310, 3507, 81, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[62435, 1394, 4119, 74, 451, "Output"],
Cell[CellGroupData[{
Cell[66579, 1472, 2151, 42, 64, "Input"],
Cell[68733, 1516, 144813, 2437, 140, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
